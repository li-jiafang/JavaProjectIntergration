<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration monitorInterval="5" status="INFO">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

    <!--变量配置-->
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <!--        <property name="LOG_PATTERN" value="%-d{yyyy/MM/dd HH:mm:ss,SSS} [%X{ip}] -[%c]-[%p] %m%n" />-->
        <Property name="LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} threadId-%-4T %-27C{1} %-10M(:%-4L) %m%n</Property>
        <!-- 定义日志存储的路径 -->
        <property name="FILE_NAME" value="question-gastrointestinal"/>
        <property name="FILE_PATH" value="/logs/${FILE_NAME}"/>
    </Properties>

    <appenders>

        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>


        <RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log" filePattern="${FILE_PATH}/info-$${date:yyyy-MM-dd}/info-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="%-d{yyyy/MM/dd HH:mm:ss,SSS} [%X{ip}] -[%c]-[%p] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        </RollingFile>

        <RollingFile name="RollingFileWarn" fileName="${FILE_PATH}/warn.log" filePattern="${FILE_PATH}/warn-$${date:yyyy-MM-dd}/warn-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="%-d{yyyy/MM/dd HH:mm:ss,SSS} [%X{ip}] -[%c]-[%p] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${FILE_PATH}/error.log"
                     filePattern="${FILE_PATH}/error-$${date:yyyy-MM-dd}/error-%d{yyyy-MM-dd}.log">
            <PatternLayout pattern="%-d{yyyy/MM/dd HH:mm:ss,SSS} [%X{ip}] -[%c]-[%p] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
        </RollingFile>


        <!-- AOP打印的日志 非error级别-->
        <Routing name="aopAppender">
            <Routes pattern="$${ctx:LOG_USER_ID}">
                <Route>
                    <RollingFile name="aopAppender" immediateFlush="true"
                                 fileName="${FILE_PATH}/aop/${ctx:LOG_USER_ID}.log"
                                 filePattern="${FILE_PATH}/aop/%d{yyyy-MM-dd}-${ctx:LOG_USER_ID}/aop-${ctx:LOG_USER_ID}-%d{yyyy-MM-dd HH_mm_ss}.log">
                        <PatternLayout charset="UTF-8" pattern="${LOG_PATTERN}"/>
                        <Policies>
                            <SizeBasedTriggeringPolicy size="50MB"/>
                        </Policies>
                        <Filters>
                            <ThresholdFilter level="error" onMatch="DENY" onMismatch="ACCEPT"/>
                        </Filters>
                    </RollingFile>
                </Route>
            </Routes>
        </Routing>

    </appenders>

    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>

        <logger name="feign.Logger" level="DEBUG" additivity="false" >
            <AppenderRef ref="Console"/>
        </logger>

        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.mybatis" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </logger>
        <!--监控系统信息-->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
        <Logger name="org.springframework" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </Logger>

        <logger name="com.wondersgroup.bigdata.questionnaire.config.log.LoggerConfiguration" level="info"
                additivity="false">
            <AppenderRef ref="aopAppender"/>
        </logger>

        <logger name="org.apache.kafka" level="error" />

        <root level="DEBUG">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>

</configuration>